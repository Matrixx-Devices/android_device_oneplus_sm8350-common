<?xml version="1.0" encoding="utf-8"?>
<!--
     Copyright (C) 2022 The Linux Foundation
     SPDX-License-Identifier: BSD-3-Clause
-->
<resources>

    <!-- If this is true, the screen will come on when you unplug usb/power/whatever. -->
    <bool name="config_unplugTurnsOnScreen">true</bool>

    <!-- Whether doze feature is enabled by default in settings -->
    <bool name="config_doze_enabled_by_default">true</bool>

    <!-- Power Management: Specifies whether to decouple the auto-suspend state of the
         device from the display on/off state.

         When false, autosuspend_disable() will be called before the display is turned on
         and autosuspend_enable() will be called after the display is turned off.
         This mode provides best compatibility for devices using legacy power management
         features such as early suspend / late resume.

         When true, autosuspend_display() and autosuspend_enable() will be called
         independently of whether the display is being turned on or off.  This mode
         enables the power manager to suspend the application processor while the
         display is on.

         This resource should be set to "true" when a doze component has been specified
         to maximize power savings but not all devices support it.

         Refer to autosuspend.h for details.
    -->
    <bool name="config_powerDecoupleAutoSuspendModeFromDisplay">true</bool>

    <!-- Power Management: Specifies whether to decouple the interactive state of the
         device from the display on/off state.
         When false, setInteractive(..., true) will be called before the display is turned on
         and setInteractive(..., false) will be called after the display is turned off.
         This mode provides best compatibility for devices that expect the interactive
         state to be tied to the display state.
         When true, setInteractive(...) will be called independently of whether the display
         is being turned on or off.  This mode enables the power manager to reduce
         clocks and disable the touch controller while the display is on.
         This resource should be set to "true" when a doze component has been specified
         to maximize power savings but not all devices support it.
         Refer to power.h for details.
    -->
    <bool name="config_powerDecoupleInteractiveModeFromDisplay">true</bool>

    <!-- Whether a software navigation bar should be shown. NOTE: in the future this may be
         autodetected from the Configuration. -->
    <bool name="config_showNavigationBar">true</bool>

    <!-- When true use the linux /dev/input/event subsystem to detect the switch changes
         on the headphone/microphone jack. When false use the older uevent framework. -->
    <bool name="config_useDevInputEventForAudioJack">true</bool>

    <!-- Telephony qualified networks service package name to bind to by default. -->
    <string name="config_qualified_networks_service_package" translatable="false">vendor.qti.iwlan</string>

    <!-- IWLAN data service package name to bind to by default. If none is specified in an overlay, an
         empty string is passed in -->
    <string name="config_wlan_data_service_package" translatable="false">vendor.qti.iwlan</string>

    <!-- IWLAN network service package name to bind to by default. If none is specified in an overlay, an
         empty string is passed in -->
    <string name="config_wlan_network_service_package" translatable="false">vendor.qti.iwlan</string>

    <!-- Default list of files pinned by the Pinner Service -->
    <string-array translatable="false" name="config_defaultPinnerServiceFiles">
        <item>"/apex/com.android.art/javalib/core-oj.jar"</item>
        <item>"/apex/com.android.art/javalib/core-libart.jar"</item>
        <item>"/system/bin/surfaceflinger"</item>
        <item>"/system/framework/ext.jar"</item>
        <item>"/system/framework/framework.jar"</item>
        <item>"/system/framework/services.jar"</item>
        <item>"/system/lib/libEGL.so"</item>
        <item>"/system/lib/libGLESv1_CM.so"</item>
        <item>"/system/lib/libGLESv2.so"</item>
        <item>"/system/lib/libGLESv3.so"</item>
        <item>"/system/lib/libgui.so"</item>
        <item>"/system/lib/libhwui.so"</item>
        <item>"/system/lib/libui.so"</item>
        <item>"/system/lib/libvulkan.so"</item>
        <item>"/system/lib64/libEGL.so"</item>
        <item>"/system/lib64/libGLESv1_CM.so"</item>
        <item>"/system/lib64/libGLESv2.so"</item>
        <item>"/system/lib64/libGLESv3.so"</item>
        <item>"/system/lib64/libgui.so"</item>
        <item>"/system/lib64/libhwui.so"</item>
        <item>"/system/lib64/libui.so"</item>
        <item>"/system/lib64/libvulkan.so"</item>
        <item>"/system_ext/priv-app/DaxUI/DaxUI.apk"</item>
        <item>"/system_ext/priv-app/daxService/daxService.apk"</item>
        <item>"/system_ext/priv-app/SystemUI/SystemUI.apk"</item>
        <item>"/vendor/lib/egl/eglSubDriverAndroid.so"</item>
        <item>"/vendor/lib/egl/libEGL_adreno.so"</item>
        <item>"/vendor/lib/egl/libGLESv1_CM_adreno.so"</item>
        <item>"/vendor/lib/egl/libGLESv2_adreno.so"</item>
        <item>"/vendor/lib/hw/vulkan.adreno.so"</item>
        <item>"/vendor/lib/libCB.so"</item>
        <item>"/vendor/lib/libOpenCL.so"</item>
        <item>"/vendor/lib/libadreno_utils.so"</item>
        <item>"/vendor/lib/libgpudataproducer.so"</item>
        <item>"/vendor/lib/libgsl.so"</item>
        <item>"/vendor/lib/libllvm-glnext.so"</item>
        <item>"/vendor/lib/libllvm-qcom.so"</item>
        <item>"/vendor/lib64/libcamxexternalformatutils.so"</item>
        <item>"/vendor/lib64/libipebpsstriping.so"</item>
        <item>"/vendor/lib64/egl/eglSubDriverAndroid.so"</item>
        <item>"/vendor/lib64/egl/libEGL_adreno.so"</item>
        <item>"/vendor/lib64/egl/libGLESv1_CM_adreno.so"</item>
        <item>"/vendor/lib64/egl/libGLESv2_adreno.so"</item>
        <item>"/vendor/lib64/hw/vulkan.adreno.so"</item>
        <item>"/vendor/lib64/libCB.so"</item>
        <item>"/vendor/lib64/libOpenCL.so"</item>
        <item>"/vendor/lib64/libadreno_utils.so"</item>
        <item>"/vendor/lib64/libgpudataproducer.so"</item>
        <item>"/vendor/lib64/libgsl.so"</item>
        <item>"/vendor/lib64/libllvm-glnext.so"</item>
        <item>"/vendor/lib64/libllvm-qcom.so"</item>
    </string-array>

    <!-- List of biometric sensors on the device, in decreasing strength. Consumed by AuthService
         when registering authenticators with BiometricService. Format must be ID:Modality:Strength,
         where: IDs are unique per device, Modality as defined in BiometricAuthenticator.java,
         and Strength as defined in Authenticators.java -->
    <string-array name="config_biometric_sensors" translatable="false">
        <item>0:2:15</item> <!-- ID0:Fingerprint:Strong -->
    </string-array>

    <!-- Whether device supports sensor based doze customizations -->
    <bool name="config_dozePulsePickup">true</bool>
    <bool name="config_dozePulseTilt">true</bool>
    <bool name="config_dozePulseProximity">true</bool>
    <bool name="config_deviceHaveWakeUpProximity">true</bool>

    <!-- The maximum range of gamma adjustment possible using the screen
         auto-brightness adjustment setting. -->
    <fraction name="config_autoBrightnessAdjustmentMaxGamma">150%</fraction>

    <!-- Parallel space blocklist -->
    <string-array name="config_parallelSpaceBlocklist">
        <item>org.lineageos.settings.device</item>
        <item>org.lineageos.device.DeviceSettings</item>
    </string-array>

    <!-- Whether the device enable the standalone (SA) mode of 5G NR.-->
    <bool name="config_telephony5gStandalone">true</bool>

    <!-- Whether the device enable the non-standalone (NSA) mode of 5G NR.-->
    <bool name="config_telephony5gNonStandalone">true</bool>

    <!-- Enforce DisplayModeDirector to select user preferred resolution -->
    <bool name="config_forceToUseSelectedResolution">true</bool>

    <!-- Default component for QR code scanner -->
    <string name="config_defaultQrCodeComponent" translatable="false">com.google.android.gms/.mlkit.barcode.ui.PlatformBarcodeScanningActivityProxy</string>
</resources>
